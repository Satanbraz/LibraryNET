@model DTO.Books
@{
    ViewBag.Title = Model.Title;
}

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
    }

    h1 {
        text-align: center;
        color: #333;
        font-size: 2em;
        margin-bottom: 20px;
    }

    /* Estilos para el contenedor de detalles */
    .book-details {
        display: flex;
        flex-direction: row;
    }

    /* Estilos para la imagen */
    .book-image {
        flex: 1;
        text-align: center;
    }

        .book-image img {
            width: 80%;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

    /* Estilos para la columna de info */
    .book-info {
        flex: 2;
        padding: 20px;
    }

        .book-info h2 {
            color: #555;
            font-size: 1.5em;
            margin-bottom: 10px;
        }

        .book-info p, .book-info span {
            color: #777;
            line-height: 1.6;
        }

        .book-info span {
            display: block;
            color: #e67e22;
            font-size: 2em;
            margin-top: 20px;
        }

        .book-info hr {
            border: 0;
            height: 1px;
            background: rgba(0, 0, 0);
            margin: 20px 0;
        }

        .book-info a {
            color: #3498db;
            text-decoration: none;
        }

            .book-info a:hover {
                text-decoration: underline;
            }


    thead, tbody, tfoot, tr, td, th {
        padding: 0 1em 1em 0;
    }

    /* Estilos para los modales*/
    .modal-vertical-centered .modal-dialog {
        display: flex;
        align-items: center;
        min-height: calc(100% - 1rem); /* Altura mínima del modal */
    }

    /* Estilos para los mensajes de error */
    .mensaje-error {
        color: red;
        font-size: 12px;
        margin-top: 5px;
        margin-left: 5px;
    }

    /* Estilos para el Sweet Alert */
    .swal2-overflow {
        overflow-x: visible;
        overflow-y: visible;
    }

    /* Estilos para el boton de fecha retorno */
    .input-borrowReturnDate {
        cursor: pointer;
        margin-left: 17%;
        margin-top: 5%;
        margin-bottom: 5%;
    }

    /* Estilos para la seccion de estados */
    .copy-states div{
        padding:5px;
        width:19%;
        display:flex;
        flex-direction:column;
        align-items:center;
    }

    .copy-states div p{
        padding: 5px;
    }
</style>

<!-- Modal Generar Prestamo-->
<div id="modalGenerarSolicitarPrestamo" class="modal fade modal-vertical-centered" tabindex="-1" aria-labelledby="modalGenerarSolicitarLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                @if (Convert.ToInt32(Session["UserRole"]) == 1)
                {
                    <h5 class="modal-title" id="modalGenerarPrestamoLabel">Generar Prestamo</h5>
                }
                else
                {
                    <h5 class="modal-title" id="modalGenerarPrestamoLabel">Solicitar Prestamo</h5>
                }
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Formulario de generar/solicitar Prestamo -->
                <form id="formGenerarPrestamo">
                    <div class="mb-3">
                        @if (Convert.ToInt32(Session["UserRole"]) == 1)
                        {
                            <label for="borrowDate" class="form-label">Ingrese fecha solicitada por usuario</label>
                        }
                        else
                        {
                            <label for="borrowDate" class="form-label">Ingrese fecha de préstamo</label>
                        }
                        <input type="datetime" class="form-control" id="borrowDate" name="borrowDate" required>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btn-ValidateBorrow">Aceptar</button>
            </div>
        </div>
    </div>
</div>
<!-- Fin modal generar -->

<!-- Inicio seccion de Detalle de libro -->
<div class="container">
    <div class="book-details">
        <div class="row">
            <!-- Imagen de libro -->
            <div class="col-md-6">
                <div class="book-image">
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.BookImage)" alt="@Model.Title">
                </div>
            </div>
            <!-- Fin imagen de libro -->
            <div class="col-md-6">
                <!-- Informacion del libro -->
                <h2>@Model.Title</h2>
                <div class="book-info">
                    <p>Autor: <a href="#">@Model.Author</a></p>
                    <span class="price" style="color:red">$ @Model.BookPrice.ToString("N0")</span>
                    <br />
                    <p>Copias vendidas: @ViewBag.BuySellCount</p>
                    <hr />
                    <p>
                        Dicta sunt explicabo. Nemo enim ipsam voluptatem voluptas sit odit aut fugit, sed quia consequuntur. Lorem ipsum dolor. Aquia sit amet, elitr, sed diam nonum eirmod tempor invidunt.
                    </p>
                    <table class="d-flex">
                        <tbody>
                            <tr>
                                <th>Año de Publicación: </th>
                                <td>@Model.BookYear</td>
                            </tr>
                            <tr>
                                <th>Género: </th>
                                <td><a href="#">@Model.BookGenre</a></td>
                            </tr>
                            <tr>
                                <th>ISBN: </th>
                                <td><a href="//isbnsearch.org/isbn/@Model.BookBC">@Model.BookBC</a></td>
                            </tr>
                            <tr>
                                <th>Editorial: </th>
                                <td><a href="#">@Model.BookEdit</a></td>
                            </tr>
                        </tbody>
                    </table>
                    <hr />
                    <div class="row copy-states">
                        <p>Copias disponibles: @Model.Stock</p>
                        <p>Product ID: @Model.Id</p>
                    </div>
                    <br />
                    <!-- botones de accion de usuarios -->
                    @if (Convert.ToInt32(Session["UserRole"]) != 1)
                    {
                        <div class="row">
                            <div class="col-md-3">
                                <a class="btn btn-sm btn-success btn-icon mr-2" title="Solicitar préstamo" onclick="ShowRequestBorrow(@Convert.ToInt32(Session["UserId"]), @Model.Id)">
                                    <svg fill="#ffffff" height="48px" width="48px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                                         viewBox="0 0 509.117 509.117" xml:space="preserve">
                                    <g transform="translate(1 1)">
                                    <g>
                                    <g>
                                    <path d="M500.965,256.162c-13.017-16.488-39.919-11.281-54.671-1.736l-75.498,50.332H255.378
                                                        c-1.736-1.736-2.603-5.207-2.603-7.81c0-3.471,1.736-7.81,4.339-10.414l51.2-17.356c15.62-6.942,28.637-28.637,21.695-45.993
                                                        c-2.603-6.075-7.81-11.281-14.753-13.885c-9.546-3.471-21.695-3.471-31.241,0.868l-77.234,26.034l-93.722,8.678
                                                        c-6.942,0-18.224,6.942-22.563,9.546l-59.878,25.166c-26.902,12.149-39.051,43.39-26.902,70.292l39.919,97.193
                                                        c0.868,2.603,2.603,4.339,5.207,5.207c1.736,0.868,2.603,0.868,3.471,0.868c1.736,0,2.603,0,3.471-0.868l102.4-51.2h154.468
                                                        c0.868,0,1.736,0,2.603-1.736l104.136-34.712c0.868,0,1.736,0,2.603-0.868l69.424-52.068
                                                        c8.678-6.075,14.753-17.356,16.488-28.637C508.775,272.65,507.039,263.104,500.965,256.162z M490.551,281.328
                                                        c-0.868,6.942-4.339,13.885-9.546,17.356l-68.556,51.2l-101.532,33.844H156.449c-1.736,0-2.603,0-4.339,0l-95.458,47.729
                                                        l-36.447-88.515c-7.81-18.224,0-39.051,18.224-47.729l60.746-26.034c0.868,0,0.868,0,1.736-0.868
                                                        c3.471-2.603,10.414-6.942,13.017-6.942l95.458-8.678c0.868,0,0.868,0,1.736,0l78.969-26.034
                                                        c3.471-0.868,6.942-1.736,10.414-1.736c2.603,0,5.207,0,7.81,0.868c2.603,0.868,4.339,2.603,5.207,4.339
                                                        c2.603,6.942-4.339,19.959-12.149,23.431l-52.068,17.356c-0.868,0.868-1.736,0.868-2.603,1.736
                                                        c-7.81,6.075-12.149,15.62-12.149,26.034c0.868,9.546,5.207,17.356,13.017,22.563c0.868,0.868,2.603,1.736,4.339,1.736h121.492
                                                        c1.736,0,3.471-0.868,3.471-1.736l78.102-52.068c9.546-6.075,26.902-8.678,32.108-1.736 C490.551,270.914,491.419,276.121,490.551,281.328z" />
                                    <path d="M60.992,175.457h52.068h34.712h225.627h34.712h52.068c5.207,0,8.678-3.471,8.678-8.678V62.643
                                                        c0-5.207-3.471-8.678-8.678-8.678H408.11h-34.712H147.772H113.06H60.992c-5.207,0-8.678,3.471-8.678,8.678v104.136
                                                        C52.314,171.985,55.785,175.457,60.992,175.457z M156.449,158.101v-86.78h208.271v86.78H156.449z M451.5,158.101h-34.712v-86.78
                                                        H451.5V158.101z M399.433,71.321v86.78h-17.356v-86.78H399.433z M139.094,71.321v86.78h-17.356v-86.78H139.094z M69.67,71.321 h34.712v86.78H69.67V71.321z" />
                                    <path d="M321.331,106.033H199.839c-5.207,0-8.678,3.471-8.678,8.678s3.471,8.678,8.678,8.678h121.492 c5.207,0,8.678-3.471,8.678-8.678S326.538,106.033,321.331,106.033z" />
                                                </g>
                                            </g>
                                        </g>
                                    </svg>
                                </a>
                            </div>
                            <br />
                            <br />
                            <div class="col-md-3">
                                <a class="btn btn-sm btn-warning btn-icon mr-2" title="Añadir a carrito" onclick="addToCart(@Convert.ToInt32(Session["UserId"]), @Model.Id)">
                                    <svg width="48px" height="48px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                        <g id="Stockholm-icons-/-Shopping-/-Cart1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                            <rect id="bound" x="0" y="0" width="24" height="24"></rect>
                                            <path d="M18.1446364,11.84388 L17.4471627,16.0287218 C17.4463569,16.0335568 17.4455155,16.0383857 17.4446387,16.0432083 C17.345843,16.5865846 16.8252597,16.9469884 16.2818833,16.8481927 L4.91303792,14.7811299 C4.53842737,14.7130189 4.23500006,14.4380834 4.13039941,14.0719812 L2.30560137,7.68518803 C2.28007524,7.59584656 2.26712532,7.50338343 2.26712532,7.4104669 C2.26712532,6.85818215 2.71484057,6.4104669 3.26712532,6.4104669 L16.9929851,6.4104669 L17.606173,3.78251876 C17.7307772,3.24850086 18.2068633,2.87071314 18.7552257,2.87071314 L20.8200821,2.87071314 C21.4717328,2.87071314 22,3.39898039 22,4.05063106 C22,4.70228173 21.4717328,5.23054898 20.8200821,5.23054898 L19.6915238,5.23054898 L18.1446364,11.84388 Z" id="Combined-Shape" fill="#ffffff" opacity="1"></path>
                                            <path d="M6.5,21 C5.67157288,21 5,20.3284271 5,19.5 C5,18.6715729 5.67157288,18 6.5,18 C7.32842712,18 8,18.6715729 8,19.5 C8,20.3284271 7.32842712,21 6.5,21 Z M15.5,21 C14.6715729,21 14,20.3284271 14,19.5 C14,18.6715729 14.6715729,18 15.5,18 C16.3284271,18 17,18.6715729 17,19.5 C17,20.3284271 16.3284271,21 15.5,21 Z" id="Combined-Shape" fill="#ffffff"></path>
                                        </g>
                                    </svg>
                                </a>
                            </div>
                        </div>
                    }
                    <!-- Fin botones de accion -->
                </div>
            </div>
            <!-- Fin informacion de libro -->
        </div>
    </div>
</div>
<!-- Fin seccion de detalles -->

<script>
    $(document).ready(function () {
        $('#modalGenererPrestamo').modal('hide');

        // Calendario para el campo borrowDate
        flatpickr("#borrowDate", {
            minDate: 'today', // Establecer fecha máxima permitida, día anterior al de hoy
            dateFormat: 'd-m-Y', // Formato de fecha
            locale: {
                firstDayOfWeek: 1// Establecer el primer día de la semana en lunes (0 para domingo, 1 para lunes, etc.)
            },
            disable: [
                function (date) {
                    // Deshabilitar sabados y domingos
                    return (date.getDay() === 0 || date.getDay() === 6);

                }
            ],
            "locale": "es"
        });
    });

    // Funcion para solicitar un prestamo
    function ShowRequestBorrow(idUser, idBook) {
        $.ajax({
            url: '/Cart/VerifyExistenceInBorrowCart',
            type: 'POST',
            data: { idBook: idBook },
            success: function (data) {
                if (data == 1) {
                    alert("Libro ya en bolsa")
                } else {
                    // Mostrar la ventana emergente para Generer Prestamo
                    $('#modalGenerarSolicitarPrestamo').modal('show');

                    document.getElementById("btn-ValidateBorrow").addEventListener('click', function () {
                        if (document.getElementById('borrowDate').value == "") {
                            mostrarMensajeError(borrowDate, 'Debe de ingresar la Fecha de Préstamo');
                        }
                        else {
                            validateFormBorrowCartRequest(idUser, idBook);
                        }
                    })
                }
            },
            error: function () {
                alert("Error al registrar Datos");
            }
        });
    }

    // Funcion para agregar libros al carrito de compras
    function addToCart(userId, bookId) {
        $.ajax({
            url: '/Cart/AddToCart',
            type: 'POST',
            data: { IdUser: userId, IdProduct: bookId },
            success: function (data) {
                if (data == "Ok") {
                    Swal.fire({
                        title: "Libro agregado al carrito",
                        text: "¿Deseas ver el carrito?",
                        icon: "success",
                        showCancelButton: true,
                        cancelButtonColor: "#d33",
                        cancelButtonText: "No",
                        confirmButtonText: "Ir al carrito"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            location.href = '/Cart/CartDetail';
                        } else if (result.isDenied) {
                            location.reload();
                        }
                    });
                } else {
                    alert("Libro ya en carrito")
                }
            },
            error: function () {
                alert("Error al registrar Datos");
            }
        });


    }

    // Funcion para validar los campos de fecha de retorno ingresadas
    function validateFormBorrowCartRequest(idUser, idBook) {

        $('#modalGenerarSolicitarPrestamo').modal('hide');
        ocultarMensajeError(borrowDate);

        var borrowCartModel = {
            IdUser: idUser,
            IdProduct: idBook,
            ItemBorrowDate: document.getElementById('borrowDate').value
        }

        Swal.fire({
            icon: 'question',
            iconColor: 'red',
            title: '¿Quieres ingresar Fecha de Devolución?',
            text: 'Si no ingresas, la fecha se generará automaticamente  (7 días)',
            showConfirmButton: true,
            showCancelButton: true,
            cancelButtonText: 'Cancelar',
            cancelButtonColor: 'red',
            allowOutsideClick: false,
            allowEscapeKey: false
        }).then((result) => {
            var fechaPrestamoSplit = $('#borrowDate').val().split('-')
            var fechaPrestamoDate = new Date(fechaPrestamoSplit[2], fechaPrestamoSplit[1] - 1, fechaPrestamoSplit[0]);
            var maxReturnDate = addBusinessDays(fechaPrestamoDate, 6);

            if (result.isConfirmed) {
                var maxDate = addBusinessDays(fechaPrestamoDate, 20);
                Swal.fire({
                    icon: 'info',
                    title: 'Ingresa Fecha de Devolución',
                    html: '<label>Si no ingresas, la fecha se generará automaticamente\n(7 días)</label>' +
                        '<br />' +
                        '<input type="datetime" class="form-control input-borrowReturnDate" id="borrowReturnDate" name="borrowReturnDate" required>',
                    showConfirmButton: true,
                    showCancelButton: true,
                    cancelButtonText: 'Cancelar',
                    cancelButtonColor: 'red',
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    preConfirm: () => {
                        var borrowReturnDate = document.getElementById('borrowReturnDate').value;
                        if (!borrowReturnDate) {
                            Swal.showValidationMessage('Por favor, ingresa una fecha de devolución');
                            return false;
                        }
                        return borrowReturnDate;
                    },
                    willOpen: (function () {
                        flatpickr("#borrowReturnDate", {
                            minDate: fechaPrestamoDate, // Establecer fecha minima permitida, día de solicitudde prestamo
                            maxDate: maxDate, // Establecer fecha maxima permitida, 7 dias habiles contando el día de solicitudde prestamo
                            dateFormat: 'd-m-Y', // Formato de fecha
                            locale: {
                                firstDayOfWeek: 1// Establecer el primer día de la semana en lunes (0 para domingo, 1 para lunes, etc.)
                            },
                            disable: [
                                function (date) {
                                    // Deshabilitar sabados y domingos
                                    return (date.getDay() === 0 || date.getDay() === 6);
                                }
                            ],
                            "locale": "es"
                        });
                    })
                }).then((result) => {
                    if (result.isConfirmed) {
                        $('#borrowDate').val("")
                        var fechaDevolucion = $('#borrowReturnDate').val();

                        borrowCartModel.ItemBorrowReturnDate = fechaDevolucion

                        addToBorrowCart(borrowCartModel)
                    } else {

                        $('#borrowDate').val("")
                        borrowCartModel.ItemBorrowReturnDate = maxReturnDate.toLocaleDateString()

                        addToBorrowCart(borrowCartModel)
                    }
                })
            } else {
                $('#borrowDate').val("")
                borrowCartModel.ItemBorrowReturnDate = maxReturnDate.toLocaleDateString()

                addToBorrowCart(borrowCartModel)
            }
        });
    }

    // Funcion para agregar libros al carrito de préstamos
    function addToBorrowCart(model) {
        $.ajax({
            url: '/Cart/AddToBorrowCart',
            type: 'POST',
            data: { borrowCart: model },
            success: function (data) {
                if (data == "Ok") {
                    Swal.fire({
                        title: "Libro agregado al carrito de Préstamos",
                        text: "¿Deseas ver el carrito?",
                        icon: "success",
                        showCancelButton: true,
                        cancelButtonColor: "#d33",
                        cancelButtonText: "No",
                        confirmButtonText: "Ir al carrito"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            location.href = '/Cart/BorrowCartDetail';
                        } else if (result.isDenied) {
                            location.reload();
                        }
                    });
                }
            },
            error: function () {
                alert("Error al registrar Datos");
            }
        });
    }

    // Funcion para agregar dias habiles despues de la fecha de prestamo
    function addBusinessDays(startDate, days) {
        var currentDate = new Date(startDate);
        var addedDays = 0;
        while (addedDays < days) {
            currentDate.setDate(currentDate.getDate() + 1);
            // Omitir Fines de Semana
            if (currentDate.getDay() !== 0 && currentDate.getDay() !== 6) {
                addedDays++;
            }
        }
        return currentDate;
    }

    //Funcion para mostrar los mensajes de error
    function mostrarMensajeError(elemento, mensaje) {
        var mensajeError = elemento.nextElementSibling;
        if (!mensajeError || !mensajeError.classList.contains('mensaje-error')) {
            mensajeError = document.createElement('div');
            mensajeError.classList.add('mensaje-error');
            elemento.parentNode.insertBefore(mensajeError, elemento.nextSibling);
        }
        mensajeError.textContent = mensaje;
    }

    //Funcion para ocultar los mensajes de error
    function ocultarMensajeError(elemento) {
        var mensajeError = elemento.nextElementSibling;
        if (mensajeError && mensajeError.classList.contains('mensaje-error')) {
            mensajeError.parentNode.removeChild(mensajeError);
        }
    }

</script>
